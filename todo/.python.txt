Te recomiendo que crees una carpeta para tus projectos de aprendisaje con el comando mkdir "nombre de la carpeta el que tu quieras sin comillas"

Recuerda que siempre deves iniciar con el comando "#!/bin/python" para poder ejecutarlo con bash

1. Para imprimir un texto hay que usar el comando "print",Ejemplo:
print("hola mundo!")
NOTA: Es importante abrir y cerrar con los parentesis y  las comillas ya que si no se utilizan no se imprimira el texto

2. Si quieres dar color al texto a imprimir solo escribe el codigo del color dentro de las comillas 
Aqui algunos colores

gris='\033[1;30m'
rojo='\033[0;31m'
rojoclaro='\033[1;31m'
verde='\033[1;32m'
amarillo='\033[1;33m'
azul='\033[0;34m'
lila='\033[0;35m'
lilaclaro='\033[1;35m'
cian='\033[0;36m'

Ejemplo:
print("\033[0;32m Hola mundo!")
Al ejecutarlo no saldra el texto "Hola mundo!" en color verde

3. Para pedir al usario que ingrese alguan opcion o q ingrese algun dato se utiliza el comando "read",Ejemplo:

print("""
1 opcion
2 opcion
""")
opc = input("ingrese una opcion: ")

NOTA: La palabara que no esta en comillas no servira para usar el "if y elif",esto funciona para cuando el usuario ingrese la opcion el comando aga algo,Ejemplo:

print("""
1 opcion
2 opcion
""")
opc = input("ingrese una opcion: ") 
if opc == 1:
print("hola mundo! ")
elif opc == 2:
printlf6/	("HOLA MUNDO!")

Al ejecutarlo nos quedara algo asi:

1 opcion
2 opcion
ingrese una opcion:

4. Un comando que nos servira para desirle al usuario que la opion que eligio es incorrecta o no esta en el menu,Se utiliza el comando "else",Ejemplo:

print("""
1 opcion
2 opcion
""")
opc = input("ingrese una opcion: ")
if opc == 1:
print("hola mundo! ")
elif opc == 2:
print("HOLA MUNDO!")

else:
print("LA OPCION ES INCORRECTA! ")

Al ejecutar y seleccionar alguna opcion incorrecta nos dira el texto "LA OPCION ES INCORRECTA! "

5. Si quieres que tu menu se repita despues de que tu ya escogiste una opcion usa el comando while true;do ,Ejemplo:

while True:
print("""
1 opcion
2 opcion
""")
opc = input("ingrese una opcion: ")
if opc == 1:
print("hola mundo! ")
elif opc == 2:
print("HOLA MUNDO!")

else:
print("LA OPCION ES INCORRECTA! ")

6. Para darle tiempo de duracion al texto que quieras imprimir usa el comando "sleep",Ejemplo:

while true;do
echo "1 opcion"
echo "2 opcion"
read -p "ingrese una opcion: " opc
if [ $opc == "1" ];then
echo "hola mundo!"
sleep 1
elif [ $opc == "2" ];then
echo "HOLA MUNDO!"
sleep 1

fi
done

Tambien le puedes agregar la opcion "exit si tu lo deseas,Ejemplo:

print("""
1 opcion
2 opcion
""")
opc = input("ingrese una opcion: ")
if opc == 1:
print("hola mundo! ")
elif opc == 2:
print("HOLA MUNDO!")
elif opc == 3:
exit()

else:
print("LA OPCION ES INCORRECTA! ")

7. En python hay librerias que tienen funciones muy importantes aqui te dejo algunas y para que funcionan 
NOTA: Al usar una libreria primero se de ve invocar con el comando "import(nombre de la libreria)

1. Request: La librería HTTP más famosa que está desarollada por Kenneth Reitz. Es un must-have para todos los desarrolladores de Python.

2. Scrapy: Si estás involucrado en webscraping, esta es una biblioteca que debes manejar sí o sí. Después de utilizar esta biblioteca no utilizarás ninguna otra relacionada.

3. wxPyhton: Un gui toolkit para Python. A esta, en mis propios proyectos, la he priorizado por encima de tkinter. Simplemente, la adorarás.

4. Pillow: Un amistoso fork de PIL (Python Imaging Library). Es mucho más sencillo de utilizar que la propia PIL y se convierte en toda una necesidad para aquellos programadores que trabajen con imágenes.

5. SQLAlchemy: Una biblioteca muy polémica para gestionar bases de datoss. Muchos la aman y muchos la odian. La decisión es cosa tuya.

6. BeautifulSoup: Sé que es lenta, pero esta librería para parsear código de xml y html es muy útil para aquellos que están comenzando a programar en Python.

7. Twisted: La herramienta más importante para cualquier desarrollador de aplicaciones de red. Cuenta con una API muy, pero que muy bonita y es utilizada por una gran cantidad de desarrolladores de Python famosos.

8. NumPy: De esta librería es muy difícil escapar. Proporciona algunas funcionalidades matemáticas avanzadas para Python.

9. SciPi: Si hablamos de NumPy entonces tenemos que hablar también de SciPy. Es una biblioteca de algoritmos y herramientas matemáticas que ha ocasionado que muchos científicos se cambien de Ruby a Python.

10. matplotlib: Una biblioteca de trazado numérico. Es muy útil para cualquier científico de datos o cualquier analizador de datos.

11. Pygame: ¿A qué programador no le gusta echarse unas partiditas a un videojuego? Con la librería Pygame podrás desarrollar juegos en 2D a la antigua usanza.

12. Pyglet: Un motor de animación y creación de juegos en 3D. Este es el motor con el que se desarrolló el juego que más dinero ha generado en Youtube, Minecraft.

13. PyQt: Un conjunto de herramientas GUI para Python. Es mi segunda elección después de wxPython para el desarrollo de interfaces gráficas de usuario para mis scripts en Python.

14. PyGTK: Otra biblioteca GUI para Python. Es la misma biblioteca con la que se creó el famoso cliente Bittorrent.

14. Scapy: Un sencillo analizador de Python desarrollado con Python. Todo muy meta.

16. pywin32: Una biblioteca de Python que proporciona algunos métodos y clases útiles para interactuar con el sistema operativo Windows.

17. NTLK: Sé que la mayoría de los programadores en Python no van a utilizar esto, pero es lo suficientemente genérica como para aparecer en este top. NTLK es una librería muy útil si pretendes manipular cadenas, aparte de otras muchas funciones que debes comprobar tú mismo.

18. nose: Un framework de testing para Python. Es utilizado por millones de desarrolladores de Python. Es totalmente obligatorio si quieres comprobar que todo funcione correctamente en tus proyectos desarrollados con Python.

19. Sympy: Sympy puede hacer evaluaciones algebraica, la diferenciaciones, expansiones, calcular números complejos, etc. Está incluida en la distribución pura de Python.

20. IPython: No puedo deciros con palabras lo útil que es esta librería para Python. Es como si dijeramos, Python tras una sesión de esteroides. Debes echarle un vistazo, sino estarás perdiendo el tiempo.


Y eso seria todo ya con esto podrias empezar con tis pequeños scripts espero y te haiga gustado eate mini curso.
